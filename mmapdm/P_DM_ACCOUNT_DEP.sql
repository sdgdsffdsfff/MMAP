/*
ETL逻辑：全删全插
*/
CREATE OR REPLACE PROCEDURE MMAPDM.P_DM_ACCOUNT_DEP
(IO_STATUS OUT INTEGER,IO_SQLERR OUT VARCHAR2)
AS
	TABLE_NAME VARCHAR2(125) :='DM_ACCOUNT_DEP'; -- 表名
	PROCEDURE_NAME VARCHAR2(125) :='P_'||TABLE_NAME;  -- 存储过程名(修改)

	DM_SQL VARCHAR2(20000); -- 存放SQL语句

	IO_ROW INTEGER;  --插入条数
	ST_ROW INTEGER;  --源数据条数

	V_ETL_DATE NUMBER;  -- 跑批日期
	V_START_TIMESTAMP TIMESTAMP;    -- 加载开始时间
	V_END_TIMESTAMP   TIMESTAMP;    -- 加载结束时间

	DM_TODAY NUMBER;        -- 数据日期"当日"
	DM_YESTERDAY NUMBER;	-- 数据日期"上一日"
	
	TX_DATE NUMBER;		

BEGIN
	SELECT SYSDATE INTO V_START_TIMESTAMP FROM dual;    -- 加载程序运行开始时间

	SELECT TO_NUMBER(TO_CHAR((SYSDATE),'YYYYMMDD')) INTO V_ETL_DATE FROM dual;  -- 取系统日期作为跑批日期
	SELECT TX_DATE INTO DM_TODAY FROM MMAPST.ST_SYSTEM_DATE;  -- 取数据日期

	--查询ST层表中是否有'当日'数据
	SELECT COUNT(1) INTO ST_ROW FROM MMAPST.ST_ACCOUNT_DEP WHERE PERIOD_ID=DM_TODAY;

	IF ST_ROW>0
	THEN
		IO_ROW := 0;
		--备份"上日"数据
		SELECT PRE_DATE INTO DM_YESTERDAY FROM MMAPST.ST_SYSTEM_DATE;  -- 取数据日期"上一日"
		--查询DM层表中是否有"上一日"数据，是否为重跑。
		SELECT COUNT(1) INTO ST_ROW FROM MMAPDM.DM_ACCOUNT_DEP WHERE PERIOD_ID=DM_YESTERDAY;
		IF ST_ROW>0
		THEN
			DM_SQL :='TRUNCATE TABLE MMAPDM.DM_ACCOUNT_DEP_PRE' ;   -- 删除备份表中数据
			EXECUTE IMMEDIATE DM_SQL;
			COMMIT;
			DM_SQL :='INSERT INTO MMAPDM.DM_ACCOUNT_DEP_PRE SELECT * FROM MMAPDM.DM_ACCOUNT_DEP' ;   -- 备份表中数据
			EXECUTE IMMEDIATE DM_SQL;
			IO_ROW := SQL%ROWCOUNT ;
			COMMIT;
		END IF;
		
		/*ETL逻辑为全删全插*/
		DM_SQL :='DELETE FROM MMAPDM.DM_ACCOUNT_DEP' ;   -- 删除表中数据
		EXECUTE IMMEDIATE DM_SQL;

		/*插入当日数据*/
		DM_SQL := 'INSERT INTO MMAPDM.DM_ACCOUNT_DEP(
				ETL_DATE,
				TX_DATE,
				PERIOD_ID,
				CUSTOMER_ID,
				ACCOUNT_ID,
				CURR_CODE,
				ACCT_STATUS_CODE,
				OPEN_BRANCH,
				OPEN_DATE,
				ACCT_BAL,
				ACCT_TYPE,
				OFFCR_ID,
				STMAINT_DT,
				STMAINT_TM,
				MAINTBUSS_ID,
				PRODTYP_ID,
				END_DATE,
				PROD_ORG,
				PROD_CODE,
				PAYSTMTDIS_NO,
				VALUE_DT,
				PAYSTMTDIS_ID,
				EXCH_RATE,
				GLGRP_ID,
				N_BAL,
				SCORE_BAL,
				MGMT_ID,
				CKTYP_ID,
				INTCAL_ID,
				REDEMP_DT,
				YRBASE_ID,
				RENEW_FG,
				WDISP_ID,
				DY_AGGL,
				PMTFRQ_ID,
				RECEIPT_ID,
				TERMTYP_ID,
				INT_RATE,
				LEFTINT_AMT,
				MTPRN_AMT,
				TW_AMTCR,
				TW_AMTDR,
				ACCGRP_ORG,
				HOLD_ID,
				TD_ID,
				SCHED_AMT,
				FXTYP_FG,
				N_RENEW,
				RPRICEFREQ,
				RPRICEFREQ_ID,
				HOLD_AMT,
				CRTACC_AMT,
				PEN_AMT,
				THIRDPART_ORG,
				EFF_DT,
				EFF_TM
			)
			SELECT
				'||V_ETL_DATE||',
				DA.TX_DATE,
				DA.PERIOD_ID,
				DA.CUSTOMER_ID,
				DA.ACCOUNT_ID,
				DA.CURR_CODE,
				DA.ACCT_STATUS_CODE,
				DA.OPEN_BRANCH,
				DA.OPEN_DATE,
				DA.ACCT_BAL,
				DA.ACCT_TYPE,
				DA.OFFCR_ID,
				DA.STMAINT_DT,
				DA.STMAINT_TM,
				DA.MAINTBUSS_ID,
				B.PROD_TYPE_CODE,
				DA.END_DATE,
				DA.PROD_ORG,
				DA.PRODTYP_ID,
				DA.PAYSTMTDIS_NO,
				DA.VALUE_DT,
				DA.PAYSTMTDIS_ID,
				DA.EXCH_RATE,
				DA.GLGRP_ID,
				DA.N_BAL,
				DA.SCORE_BAL,
				DA.MGMT_ID,
				DA.CKTYP_ID,
				DA.INTCAL_ID,
				DA.REDEMP_DT,
				DA.YRBASE_ID,
				DA.RENEW_FG,
				DA.WDISP_ID,
				DA.DY_AGGL,
				DA.PMTFRQ_ID,
				DA.RECEIPT_ID,
				DA.TERMTYP_ID,
				DA.INT_RATE,
				DA.LEFTINT_AMT,
				DA.MTPRN_AMT,
				DA.TW_AMTCR,
				DA.TW_AMTDR,
				DA.ACCGRP_ORG,
				DA.HOLD_ID,
				DA.TD_ID,
				DA.SCHED_AMT,
				DA.FXTYP_FG,
				DA.N_RENEW,
				DA.RPRICEFREQ,
				DA.RPRICEFREQ_ID,
				DA.HOLD_AMT,
				DA.CRTACC_AMT,
				DA.PEN_AMT,
				DA.THIRDPART_ORG,
				DA.EFF_DT,
				DA.EFF_TM
			FROM MMAPST.ST_ACCOUNT_DEP DA
			LEFT JOIN MMAPDM.DM_PRODUCT B
			ON B.PROD_CODE = DA.PRODTYP_ID';
		EXECUTE IMMEDIATE DM_SQL;
		IO_ROW := IO_ROW+SQL%ROWCOUNT ;
	END IF;

	/*写入日志信息*/
	SELECT SYSDATE INTO V_END_TIMESTAMP   FROM dual;    -- 加载程序运行结束时间
	IO_STATUS := 0 ;
	IO_SQLERR := 'SUSSCESS';
	P_MMAPDM_WRITE_LOGS(PROCEDURE_NAME,IO_STATUS,IO_ROW,V_START_TIMESTAMP,V_END_TIMESTAMP,IO_SQLERR);
	COMMIT;
	EXCEPTION
	  WHEN OTHERS THEN
	ROLLBACK ;
	IO_STATUS := 9 ;
	IO_SQLERR := SQLCODE || SQLERRM ;
	SELECT SYSDATE INTO V_END_TIMESTAMP FROM dual;
	P_MMAPDM_WRITE_LOGS(PROCEDURE_NAME,IO_STATUS,IO_ROW,V_START_TIMESTAMP,V_END_TIMESTAMP,IO_SQLERR);
END P_DM_ACCOUNT_DEP;
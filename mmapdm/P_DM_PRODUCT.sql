CREATE OR REPLACE PROCEDURE "P_DM_PRODUCT"
(IO_STATUS OUT INTEGER,IO_SQLERR OUT VARCHAR2)
AS

	TABLE_NAME VARCHAR2(125) :='DM_PRODUCT';	-- 表名(修改)
	PROCEDURE_NAME VARCHAR2(125) :='P_'||TABLE_NAME;	-- 存储过程名(修改)
	
	IO_ROW INTEGER;	--插入条数
	ST_ROW INTEGER;	--源数据条数
	
	V_ETL_DATE NUMBER;	-- 跑批日期
	V_PRE_ETL_DATE NUMBER;  -- 上一跑批日期
	V_START_TIMESTAMP TIMESTAMP;	-- 加载开始时间
	V_END_TIMESTAMP TIMESTAMP;	-- 加载结束时间
	
	DM_SQL VARCHAR2(20000);	-- 存放SQL语句

BEGIN

	SELECT SYSDATE INTO V_START_TIMESTAMP	FROM dual;  -- 加载程序运行开始时间
	
	SELECT TO_NUMBER(TO_CHAR((SYSDATE),'YYYYMMDD')) INTO V_ETL_DATE FROM dual;  -- 取系统日期作为跑批日期
	
	--查询ST层表中是否有'当日'数据
	SELECT COUNT(1) INTO ST_ROW FROM MMAPST.ST_PRODUCT WHERE ETL_DATE=V_ETL_DATE;
	IF ST_ROW>0
	THEN
		--备份"上日"数据
		SELECT TO_NUMBER(TO_CHAR((SYSDATE-1),'YYYYMMDD')) INTO V_PRE_ETL_DATE FROM dual;  -- 取上一跑批日期
		--查询DM层表中是否有"上一日"数据，是否为重跑。
		SELECT COUNT(1) INTO ST_ROW FROM MMAPDM.DM_PRODUCT WHERE ETL_DATE=V_PRE_ETL_DATE;
		IF ST_ROW>0
		THEN
			DM_SQL :='TRUNCATE TABLE MMAPDM.DM_PRODUCT_PRE' ;   -- 删除备份表中数据
			EXECUTE IMMEDIATE DM_SQL;
			COMMIT;
			DM_SQL :='INSERT INTO MMAPDM.DM_PRODUCT_PRE SELECT * FROM MMAPDM.DM_PRODUCT' ;   -- 备份表中数据
			EXECUTE IMMEDIATE DM_SQL;
			IO_ROW := SQL%ROWCOUNT ;
			COMMIT;
		END IF;
		--本调度逻辑为全删全插
		DM_SQL :='TRUNCATE TABLE MMAPDM.DM_PRODUCT' ;	 -- 删除表中数据
		EXECUTE IMMEDIATE DM_SQL;
		DM_SQL :='
			INSERT INTO MMAPDM.DM_PRODUCT
			(
				ETL_DATE
				,PROD_CODE
				,PROD_DESC
				,PROD_START_DT
				,PROD_END_DT
				,PROD_TYPE_CODE
				,PROD_TYPE_DESC
				,PROD_MID_CODE
				,PROD_MID_DESC
				,PROD_DET1_CODE
				,PROD_DET1_DESC
				,PROD_DET2_CODE
				,PROD_DET2_DESC
				,PROD_IND_CODE
				,PROD_IND_DESC
			)
			SELECT
				'||V_ETL_DATE||' AS ETL_DATE
				,A.PROD_CODE
				,A.PROD_DESC
				,NULL	AS PROD_START_DT
				,NULL	AS PROD_END_DT
				,''LOAN'' AS PROD_TYPE_CODE
				,''贷款'' AS PROD_TYPE_DESC
				,NULL	AS PROD_MID_CODE
				,NULL	AS PROD_MID_DESC
				,NULL	AS PROD_DET1_CODE
				,NULL	AS PROD_DET1_DESC
				,NULL	AS PROD_DET2_CODE
				,NULL	AS PROD_DET2_DESC
				,NULL	AS PROD_IND_CODE
				,NULL	AS PROD_IND_DESC
			FROM MMAPST.ST_PRODUCT A
			WHERE SOURCEGRP=''PDASSET''
			UNION ALL
			SELECT
				TO_NUMBER(TO_CHAR(SYSDATE,''YYYYMMDD'')) AS ETL_DATE
				,A.PROD_CODE
				,A.PROD_DESC
				,INCMBEG_DT AS PROD_START_DT
				,INCMEND_DT AS PROD_END_DT
				,''FIN'' AS PROD_TYPE_CODE
				,''理财'' AS PROD_TYPE_DESC
				,SUBSTR(PROD_CODE,1,2) AS PROD_MID_CODE
				,SUBSTR(PROD_DESC,1,2) AS PROD_MID_DESC
				,Term_No AS PROD_DET1_CODE
				,NULL	AS PROD_DET1_DESC
				,TermUnit_ID AS PROD_DET2_CODE
				,CASE	TermUnit_ID
					WHEN ''D'' THEN	''天''
					WHEN ''M'' THEN	''月''
					WHEN ''Y'' THEN	''年''
				 END AS PROD_DET2_DESC
				,NULL	AS PROD_IND_CODE
				,NULL	AS PROD_IND_DESC
			FROM MMAPST.ST_PRODUCT A
			WHERE SOURCEGRP=''PDINVFS''
			AND PROD_TYP_CODE=''1''
			AND LENGTH(PROD_CODE)=7
			UNION ALL
			SELECT
				TO_NUMBER(TO_CHAR(SYSDATE,''YYYYMMDD'')) AS ETL_DATE
				,A.PROD_CODE
				,A.PROD_DESC
				,INCMBEG_DT AS PROD_START_DT
				,INCMEND_DT AS PROD_END_DT
				,''FOUND'' AS	PROD_TYPE_CODE
				,''基金'' AS PROD_TYPE_DESC
				,NULL	AS PROD_MID_CODE
				,NULL	AS PROD_MID_DESC
				,Term_No AS PROD_DET1_CODE
				,NULL	AS PROD_DET1_DESC
				,TermUnit_ID AS PROD_DET2_CODE
				,CASE	TermUnit_ID
					WHEN ''D'' THEN	''天''
					WHEN ''M'' THEN	''月''
					WHEN ''Y'' THEN	''年''
				 END AS PROD_DET2_DESC
				,NULL	AS PROD_IND_CODE
				,NULL	AS PROD_IND_DESC
			FROM MMAPST.ST_PRODUCT A
			WHERE SOURCEGRP=''PDINVFS''
			AND PROD_TYP_CODE=''0''
			UNION ALL
			SELECT
				TO_NUMBER(TO_CHAR(SYSDATE,''YYYYMMDD'')) AS ETL_DATE
				,A.PROD_CODE
				,A.PROD_DESC
				,INCMBEG_DT AS PROD_START_DT
				,INCMEND_DT AS PROD_END_DT
				,''NDEBT'' AS	PROD_TYPE_CODE
				,''国债'' AS PROD_TYPE_DESC
				,''ENDEBT'' AS PROD_MID_CODE
				,''电子式国债'' AS PROD_MID_DESC
				,Term_No AS PROD_DET1_CODE
				,NULL	AS PROD_DET1_DESC
				,TermUnit_ID AS PROD_DET2_CODE
				,CASE	TermUnit_ID
					WHEN ''D'' THEN	''天''
					WHEN ''M'' THEN	''月''
					WHEN ''Y'' THEN	''年''
				 END AS PROD_DET2_DESC
				,NULL	AS PROD_IND_CODE
				,NULL	AS PROD_IND_DESC
			FROM MMAPST.ST_PRODUCT A
			WHERE SOURCEGRP=''PDINVFS''
			AND PROD_TYP_CODE=''B''
			UNION ALL
			SELECT
				TO_NUMBER(TO_CHAR(SYSDATE,''YYYYMMDD'')) AS ETL_DATE
				,A.PROD_CODE
				,A.PROD_DESC
				,NULL	AS PROD_START_DT
				,NULL	AS PROD_END_DT
				,''NDEBT'' AS	PROD_TYPE_CODE
				,''国债'' AS PROD_TYPE_DESC
				,''ENDEBT'' AS PROD_MID_CODE
				,''电子式国债'' AS PROD_MID_DESC
				,TO_NUMBER(SUBSTR(A.PROD_CODE,INSTR（A.PROD_CODE,''-'',1,1）+1,INSTR（A.PROD_CODE,''-'',1,2）-1-INSTR（A.PROD_CODE,''-'',1,1）)) AS PROD_DET1_CODE
				,NULL	AS PROD_DET1_DESC
				,CASE	WHEN INSTR（A.PROD_CODE,''-'',1,2）> 0 THEN SUBSTR(A.PROD_CODE,-1,1) END  AS PROD_DET2_CODE
				,CASE	SUBSTR(A.PROD_CODE,-1,1)
					WHEN ''D'' THEN	''天''
					WHEN ''M'' THEN	''月''
					WHEN ''Y'' THEN	''年''
				 END AS PROD_DET2_DESC
				,NULL	AS PROD_IND_CODE
				,NULL	AS PROD_IND_DESC
			FROM MMAPST.ST_PRODUCT A
			WHERE SOURCEGRP=''PDLIABI''
			AND PROD_DESC LIKE ''%电子国债%''
			UNION ALL
			SELECT
				TO_NUMBER(TO_CHAR(SYSDATE,''YYYYMMDD'')) AS ETL_DATE
				,A.PROD_CODE
				,A.PROD_DESC
				,NULL	AS PROD_START_DT
				,NULL	AS PROD_END_DT
				,''NDEBT'' AS	PROD_TYPE_CODE
				,''国债'' AS PROD_TYPE_DESC
				,''PNDEBT'' AS PROD_MID_CODE
				,''凭证式国债'' AS PROD_MID_DESC
				,TO_NUMBER(SUBSTR(A.PROD_CODE,INSTR（A.PROD_CODE,''-'',1,1）+1,INSTR（A.PROD_CODE,''-'',1,2）-1-INSTR（A.PROD_CODE,''-'',1,1）)) AS PROD_DET1_CODE
				,NULL	AS PROD_DET1_DESC
				,CASE	WHEN INSTR（A.PROD_CODE,''-'',1,2）> 0 THEN SUBSTR(A.PROD_CODE,-1,1) END  AS PROD_DET2_CODE
				,CASE	SUBSTR(A.PROD_CODE,-1,1)
					WHEN ''D'' THEN	''天''
					WHEN ''M'' THEN	''月''
					WHEN ''Y'' THEN	''年''
				 END AS PROD_DET2_DESC
				,NULL	AS PROD_IND_CODE
				,NULL	AS PROD_IND_DESC
			FROM MMAPST.ST_PRODUCT A
			WHERE SOURCEGRP=''PDLIABI''
			AND PROD_DESC LIKE ''%凭证%''
			UNION ALL
			SELECT
				TO_NUMBER(TO_CHAR(SYSDATE,''YYYYMMDD'')) AS ETL_DATE
				,A.PROD_CODE
				,A.PROD_DESC
				,NULL	AS PROD_START_DT
				,NULL	AS PROD_END_DT
				,''FIN'' AS PROD_TYPE_CODE
				,''理财'' AS PROD_TYPE_DESC
				,NULL	AS PROD_MID_CODE
				,SUBSTR(A.PROD_DESC,1,3) AS PROD_MID_DESC
				,TO_NUMBER(SUBSTR(A.PROD_CODE,INSTR（A.PROD_CODE,''-'',1,1）+1,INSTR（A.PROD_CODE,''-'',1,2）-1-INSTR（A.PROD_CODE,''-'',1,1）)) AS PROD_DET1_CODE
				,NULL	AS PROD_DET1_DESC
				,CASE	WHEN INSTR（A.PROD_CODE,''-'',1,2）> 0 THEN SUBSTR(A.PROD_CODE,-1,1) END  AS PROD_DET2_CODE
				,CASE	SUBSTR(A.PROD_CODE,-1,1)
					WHEN ''D'' THEN	''天''
					WHEN ''M'' THEN	''月''
					WHEN ''Y'' THEN	''年''
				 END AS PROD_DET2_DESC
				,NULL	AS PROD_IND_CODE
				,NULL	AS PROD_IND_DESC
			FROM MMAPST.ST_PRODUCT A
			WHERE SOURCEGRP=''PDLIABI''
			AND PROD_DESC LIKE ''%理财%''
			UNION ALL
			SELECT
				TO_NUMBER(TO_CHAR(SYSDATE,''YYYYMMDD'')) AS ETL_DATE
				,A.PROD_CODE
				,A.PROD_DESC
				,NULL	AS PROD_START_DT
				,NULL	AS PROD_END_DT
				,''TD'' AS PROD_TYPE_CODE
				,''定期存款''	AS PROD_TYPE_DESC
				,SUBSTR(A.PROD_CODE,1,2) AS PROD_MID_CODE
				,A.PROD_DESC AS PROD_MID_DESC
				,TO_NUMBER(SUBSTR(A.PROD_CODE,INSTR（A.PROD_CODE,''-'',1,1）+1,INSTR（A.PROD_CODE,''-'',1,2）-1-INSTR（A.PROD_CODE,''-'',1,1）)) AS PROD_DET1_CODE
				,NULL	AS PROD_DET1_DESC
				,CASE	WHEN INSTR（A.PROD_CODE,''-'',1,2）> 0 THEN SUBSTR(A.PROD_CODE,-1,1) END AS PROD_DET2_CODE
				,CASE	SUBSTR(A.PROD_CODE,-1,1)
					WHEN ''D'' THEN	''天''
					WHEN ''M'' THEN	''月''
					WHEN ''Y'' THEN	''年''
				 END AS PROD_DET2_DESC
				,NULL	AS PROD_IND_CODE
				,NULL	AS PROD_IND_DESC
			FROM MMAPST.ST_PRODUCT A
			WHERE SOURCEGRP=''PDLIABI''
			AND ( PROD_DESC	NOT  LIKE ''%理财%'' AND PROD_DESC NOT	LIKE  ''%国债%'')'
		;
		EXECUTE	 IMMEDIATE DM_SQL;
		IO_ROW := IO_ROW+SQL%ROWCOUNT ;
		COMMIT;
	END IF;
	SELECT SYSDATE INTO V_END_TIMESTAMP FROM DUAL;  -- 加载程序运行结束时间

	IO_STATUS := 0 ;
	IO_SQLERR := 'SUSSCESS';
	P_MMAPDM_WRITE_LOGS(PROCEDURE_NAME,IO_STATUS,IO_ROW,V_START_TIMESTAMP,V_END_TIMESTAMP,IO_SQLERR);
	COMMIT;
	EXCEPTION
		WHEN OTHERS	THEN
	ROLLBACK;
	IO_STATUS := 9;
	IO_SQLERR := SQLCODE ||  SQLERRM;
	
	SELECT SYSDATE INTO V_END_TIMESTAMP FROM DUAL;
	P_MMAPDM_WRITE_LOGS(PROCEDURE_NAME,IO_STATUS,IO_ROW,V_START_TIMESTAMP,V_END_TIMESTAMP,IO_SQLERR);
END P_DM_PRODUCT;
/

CREATE OR REPLACE PROCEDURE "MMAPDM"."P_DM_CUST_TRANS_STAT_FREQ"
(TABLE_NAME IN VARCHAR2, --表名
  FREQ IN VARCHAR2, --频度
  FREQ_VALUE IN VARCHAR2, --频度值
  DAY_OF_FREQ IN VARCHAR2, --频度中的第几天
  FREQ_HIS IN NUMBER, --频度留存历史期数
  DM_TODAY IN NUMBER,        -- 数据日期"当日"
  DM_YESTERDAY IN NUMBER, -- 数据日期"上一日"
  IO_ROW OUT INTEGER,
  IO_STATUS OUT INTEGER,
  IO_SQLERR OUT VARCHAR2
)

AS

  PROCEDURE_NAME VARCHAR2(125) :='P_'||TABLE_NAME;  -- 存储过程名(修改)
  DM_TABLE_NAME VARCHAR2(125) := TABLE_NAME; 


  

  DM_SQL VARCHAR2(30000); -- the variable to loading the SQL statment
  ST_ROW INTEGER;  --源数据条数
  
  V_ETL_DATE NUMBER;  -- 跑批日期
  V_START_TIMESTAMP TIMESTAMP;    --the start time of procedures
  V_END_TIMESTAMP   TIMESTAMP;    --the end time of procedures

  V_COUNT NUMBER;  --计数变量
  V_COMMITNUM CONSTANT NUMBER :=500000;--一次提交记录数（默认一百万）
  
  --定义一个游标数据类型  
  TYPE emp_cursor_type IS REF CURSOR;  
  --声明一个游标变量  
  c1 EMP_CURSOR_TYPE;  
  --声明记录变量  
  V_DM_CUST_TRANS_W_STAT DM_CUST_TRANS_W_STAT%ROWTYPE;
  V_DM_CUST_TRANS_M_STAT DM_CUST_TRANS_M_STAT%ROWTYPE;
  V_DM_CUST_TRANS_Q_STAT DM_CUST_TRANS_Q_STAT%ROWTYPE;
  V_DM_CUST_TRANS_Y_STAT DM_CUST_TRANS_Y_STAT%ROWTYPE;



BEGIN

  IO_ROW := 0;  --插入条数

  SELECT SYSDATE INTO V_START_TIMESTAMP FROM dual;    -- 加载程序运行开始时间
  SELECT TO_NUMBER(TO_CHAR((SYSDATE),'YYYYMMDD')) INTO V_ETL_DATE FROM dual;  -- 取系统日期作为跑批日期

  --恢复'上一日'数据。
  --查询DM层表中是否有"今日"数据，是否为重跑。
  DM_SQL := 'SELECT COUNT(1) FROM MMAPDM.'||TABLE_NAME||' WHERE PERIOD_ID='||DM_TODAY;
  EXECUTE  IMMEDIATE DM_SQL  INTO ST_ROW;
  IF ST_ROW>0
    --如果为重跑数据，则将数据恢复为'前一日'数据状态

      THEN
    --1.删除'今日'数据
    DM_SQL :='DELETE FROM MMAPDM.'||TABLE_NAME||' WHERE PERIOD_ID='||DM_TODAY;
    EXECUTE IMMEDIATE DM_SQL;
    IO_ROW := IO_ROW+SQL%ROWCOUNT ;
    COMMIT;
    --2.恢复频度差
    DM_SQL :='UPDATE MMAPDM.'||TABLE_NAME||' SET FREQ_DIFF = FREQ_DIFF - 1
        WHERE (SELECT '||DAY_OF_FREQ||' FROM MMAPDM.MID_CALENDAR WHERE PERIOD_ID='||DM_TODAY||')=1
      ';
    EXECUTE IMMEDIATE DM_SQL;
    IO_ROW := IO_ROW+SQL%ROWCOUNT ;
    COMMIT;
  --3.插入昨日数据
  DM_SQL:= 'INSERT INTO MMAPDM.'||TABLE_NAME||'
      (
      ETL_DATE
    ,TX_DATE
    ,PERIOD_ID
    ,FREQ
    ,YEAR
    ,FREQ_VALUE
    ,FREQ_DIFF
    ,CUSTOMER_ID
    ,TransTyp_ID
    ,CHANNEL
    ,TransBr_ID
    ,PROD_TYPE
    ,TRANSDIR_FG
    ,CUST_TRANS_AMT_LC
    ,CUST_TRANS_AMT_CWS_LC
    ,CUST_TRANS_AMT_SQT_LC
    ,CUST_TRANS_AMT_MAX_LC
    ,CUST_TRANS_AMT_MAX_DATE_LC
    ,CUST_TRANS_AMT_MIN_LC
    ,CUST_TRANS_AMT_MIN_DATE_LC
    ,CUST_TRANS_AMT_AVG_LC
    ,CUST_TRANS_AMT_AVG_CWS_LC
    ,CUST_TRANS_AMT_AVG_SQT_LC
    ,CUST_TRANS_CNT_LC
    ,CUST_TRANS_CNT_CWS_LC
    ,CUST_TRANS_CNT_SQT_LC
    ,CUST_TRANS_CNT_MAX_LC
    ,CUST_TRANS_CNT_MAX_DATE_LC
    ,CUST_TRANS_CNT_MIN_LC
    ,CUST_TRANS_CNT_MIN_DATE_LC
    ,CUST_TRANS_CNT_AVG_LC
    ,CUST_TRANS_CNT_AVG_CWS_LC
    ,CUST_TRANS_CNT_AVG_SQT_LC
    ,CUST_TRANS_AMT_FC
    ,CUST_TRANS_AMT_CWS_FC
    ,CUST_TRANS_AMT_SQT_FC
    ,CUST_TRANS_AMT_MAX_FC
    ,CUST_TRANS_AMT_MAX_DATE_FC
    ,CUST_TRANS_AMT_MIN_FC
    ,CUST_TRANS_AMT_MIN_DATE_FC
    ,CUST_TRANS_AMT_AVG_FC
    ,CUST_TRANS_AMT_AVG_CWS_FC
    ,CUST_TRANS_AMT_AVG_SQT_FC
    ,CUST_TRANS_CNT_FC
    ,CUST_TRANS_CNT_CWS_FC
    ,CUST_TRANS_CNT_SQT_FC
    ,CUST_TRANS_CNT_MAX_FC
    ,CUST_TRANS_CNT_MAX_DATE_FC
    ,CUST_TRANS_CNT_MIN_FC
    ,CUST_TRANS_CNT_MIN_DATE_FC
    ,CUST_TRANS_CNT_AVG_FC
    ,CUST_TRANS_CNT_AVG_CWS_FC
    ,CUST_TRANS_CNT_AVG_SQT_FC
    ,CUST_TRANS_AMT
    ,CUST_TRANS_AMT_CWS
    ,CUST_TRANS_AMT_SQT
    ,CUST_TRANS_AMT_MAX
    ,CUST_TRANS_AMT_MAX_DATE
    ,CUST_TRANS_AMT_MIN
    ,CUST_TRANS_AMT_MIN_DATE
    ,CUST_TRANS_AMT_AVG
    ,CUST_TRANS_AMT_AVG_CWS
    ,CUST_TRANS_AMT_AVG_SQT
    ,CUST_TRANS_CNT
    ,CUST_TRANS_CNT_CWS
    ,CUST_TRANS_CNT_SQT
    ,CUST_TRANS_CNT_MAX
    ,CUST_TRANS_CNT_MAX_DATE
    ,CUST_TRANS_CNT_MIN
    ,CUST_TRANS_CNT_MIN_DATE
    ,CUST_TRANS_CNT_AVG
    ,CUST_TRANS_CNT_AVG_CWS
    ,CUST_TRANS_CNT_AVG_SQT
    ,NEW_FLAG
    )

  SELECT
    ETL_DATE
    ,TX_DATE
    ,PERIOD_ID
    ,FREQ
    ,YEAR
    ,FREQ_VALUE
    ,FREQ_DIFF
    ,CUSTOMER_ID
    ,TransTyp_ID
    ,CHANNEL
    ,TransBr_ID
    ,PROD_TYPE
    ,TRANSDIR_FG
    ,CUST_TRANS_AMT_LC
    ,CUST_TRANS_AMT_CWS_LC
    ,CUST_TRANS_AMT_SQT_LC
    ,CUST_TRANS_AMT_MAX_LC
    ,CUST_TRANS_AMT_MAX_DATE_LC
    ,CUST_TRANS_AMT_MIN_LC
    ,CUST_TRANS_AMT_MIN_DATE_LC
    ,CUST_TRANS_AMT_AVG_LC
    ,CUST_TRANS_AMT_AVG_CWS_LC
    ,CUST_TRANS_AMT_AVG_SQT_LC
    ,CUST_TRANS_CNT_LC
    ,CUST_TRANS_CNT_CWS_LC
    ,CUST_TRANS_CNT_SQT_LC
    ,CUST_TRANS_CNT_MAX_LC
    ,CUST_TRANS_CNT_MAX_DATE_LC
    ,CUST_TRANS_CNT_MIN_LC
    ,CUST_TRANS_CNT_MIN_DATE_LC
    ,CUST_TRANS_CNT_AVG_LC
    ,CUST_TRANS_CNT_AVG_CWS_LC
    ,CUST_TRANS_CNT_AVG_SQT_LC
    ,CUST_TRANS_AMT_FC
    ,CUST_TRANS_AMT_CWS_FC
    ,CUST_TRANS_AMT_SQT_FC
    ,CUST_TRANS_AMT_MAX_FC
    ,CUST_TRANS_AMT_MAX_DATE_FC
    ,CUST_TRANS_AMT_MIN_FC
    ,CUST_TRANS_AMT_MIN_DATE_FC
    ,CUST_TRANS_AMT_AVG_FC
    ,CUST_TRANS_AMT_AVG_CWS_FC
    ,CUST_TRANS_AMT_AVG_SQT_FC
    ,CUST_TRANS_CNT_FC
    ,CUST_TRANS_CNT_CWS_FC
    ,CUST_TRANS_CNT_SQT_FC
    ,CUST_TRANS_CNT_MAX_FC
    ,CUST_TRANS_CNT_MAX_DATE_FC
    ,CUST_TRANS_CNT_MIN_FC
    ,CUST_TRANS_CNT_MIN_DATE_FC
    ,CUST_TRANS_CNT_AVG_FC
    ,CUST_TRANS_CNT_AVG_CWS_FC
    ,CUST_TRANS_CNT_AVG_SQT_FC
    ,CUST_TRANS_AMT
    ,CUST_TRANS_AMT_CWS
    ,CUST_TRANS_AMT_SQT
    ,CUST_TRANS_AMT_MAX
    ,CUST_TRANS_AMT_MAX_DATE
    ,CUST_TRANS_AMT_MIN
    ,CUST_TRANS_AMT_MIN_DATE
    ,CUST_TRANS_AMT_AVG
    ,CUST_TRANS_AMT_AVG_CWS
    ,CUST_TRANS_AMT_AVG_SQT
    ,CUST_TRANS_CNT
    ,CUST_TRANS_CNT_CWS
    ,CUST_TRANS_CNT_SQT
    ,CUST_TRANS_CNT_MAX
    ,CUST_TRANS_CNT_MAX_DATE
    ,CUST_TRANS_CNT_MIN
    ,CUST_TRANS_CNT_MIN_DATE
    ,CUST_TRANS_CNT_AVG
    ,CUST_TRANS_CNT_AVG_CWS
    ,CUST_TRANS_CNT_AVG_SQT
    ,NEW_FLAG
  FROM MMAPDM.DM_CUST_TRANS_STAT_PRE
  WHERE FREQ='''||FREQ||'''
    AND PERIOD_ID='||DM_YESTERDAY
    ;
    EXECUTE  IMMEDIATE DM_SQL;
    IO_ROW := IO_ROW+SQL%ROWCOUNT ;
    COMMIT;
    END IF;

    --备份"上日"数据
    --查询DM层表中是否有"上一日"数据，是否为重跑。
    DM_SQL := ' SELECT COUNT(1) FROM MMAPDM.'||TABLE_NAME||' WHERE PERIOD_ID='||DM_YESTERDAY;
    EXECUTE  IMMEDIATE DM_SQL  INTO ST_ROW;
    IF ST_ROW>0
    THEN
      DM_SQL :='DELETE FROM MMAPDM.DM_CUST_TRANS_STAT_PRE WHERE FREQ='''||FREQ||'''' ;   -- 删除备份表中月频度数据
      EXECUTE IMMEDIATE DM_SQL;
      COMMIT;
      DM_SQL :='INSERT INTO MMAPDM.DM_CUST_TRANS_STAT_PRE SELECT * FROM MMAPDM.'||TABLE_NAME||' WHERE PERIOD_ID='||DM_YESTERDAY ;   -- 备份表中上日数据
      EXECUTE IMMEDIATE DM_SQL;
      IO_ROW :=IO_ROW+ SQL%ROWCOUNT ;
      COMMIT;
    END IF;

    --1.更新频度差
    DM_SQL :='UPDATE MMAPDM.'||TABLE_NAME||' SET FREQ_DIFF = FREQ_DIFF + 1
        WHERE (SELECT '||DAY_OF_FREQ||' FROM MMAPDM.MID_CALENDAR WHERE PERIOD_ID='||DM_TODAY||')=1
      ';
    EXECUTE IMMEDIATE DM_SQL;
    IO_ROW := IO_ROW+SQL%ROWCOUNT ;
    COMMIT;
    --2. 建立临时表

    -----取前一天数据-----
    SELECT COUNT(1) INTO ST_ROW FROM USER_TABLES WHERE TABLE_NAME = 'TMP_CUST_TRANS_CAL';
    IF ST_ROW >0
    THEN
      DM_SQL := 'DROP TABLE MMAPDM.TMP_CUST_TRANS_CAL';
      EXECUTE IMMEDIATE DM_SQL;
    END IF;

  DM_SQL:= 'CREATE TABLE MMAPDM.TMP_CUST_TRANS_CAL AS
    SELECT
     '||V_ETL_DATE||' AS  ETL_DATE
     ,S.TX_DATE
     ,S.PERIOD_ID
     ,'''||FREQ||'''  AS FREQ
     ,S.YEAR
     ,S.FREQ_VALUE
     ,0 AS FREQ_DIFF
     ,S.CUSTOMER_ID
     ,S.TransTyp_ID
     ,S.CHN_ID
     ,S.TransBr_ID
     ,S.PRODTYP_ID
     ,S.TRANSDIR_FG
     ,S.CUST_TRANS_AMT_LC
     ,0 AS CUST_TRANS_AMT_CWS_LC  --,C.CUST_TRANS_AMT_LC AS CUST_TRANS_AMT_CWS_LC
     ,D.CUST_TRANS_AMT_LC AS CUST_TRANS_AMT_SQT_LC
     ,S.CUST_TRANS_AMT_MAX_LC
     ,S.CUST_TRANS_AMT_MAX_DATE_LC
     ,S.CUST_TRANS_AMT_MIN_LC
     ,S.CUST_TRANS_AMT_MIN_DATE_LC
     ,S.CUST_TRANS_AMT_AVG_LC
     ,0 AS CUST_TRANS_AMT_AVG_CWS_LC  --,C.CUST_TRANS_AMT_LC AS CUST_TRANS_AMT_AVG_CWS_LC
     ,D.CUST_TRANS_AMT_LC AS CUST_TRANS_AMT_AVG_SQT_LC
     ,S.CUST_TRANS_CNT_LC
     ,0 AS CUST_TRANS_CNT_CWS_LC  --,C.CUST_TRANS_CNT_LC AS CUST_TRANS_CNT_CWS_LC
     ,D.CUST_TRANS_CNT_LC AS CUST_TRANS_CNT_SQT_LC
     ,S.CUST_TRANS_CNT_MAX_LC
     ,S.CUST_TRANS_CNT_MAX_DATE_LC
     ,S.CUST_TRANS_CNT_MIN_LC
     ,S.CUST_TRANS_CNT_MIN_DATE_LC
     ,S.CUST_TRANS_CNT_AVG_LC
     ,0 AS CUST_TRANS_CNT_AVG_CWS_LC  --,C.CUST_TRANS_CNT_LC AS CUST_TRANS_CNT_AVG_CWS_LC
     ,D.CUST_TRANS_CNT_LC AS CUST_TRANS_CNT_AVG_SQT_LC
     ,S.CUST_TRANS_AMT_FC
     ,0 AS CUST_TRANS_AMT_CWS_FC   --,C.CUST_TRANS_AMT_FC AS CUST_TRANS_AMT_CWS_FC
     ,D.CUST_TRANS_AMT_FC AS CUST_TRANS_AMT_SQT_FC
     ,S.CUST_TRANS_AMT_MAX_FC
     ,S.CUST_TRANS_AMT_MAX_DATE_FC
     ,S.CUST_TRANS_AMT_MIN_FC
     ,S.CUST_TRANS_AMT_MIN_DATE_FC
     ,S.CUST_TRANS_AMT_AVG_FC
     ,0 AS CUST_TRANS_AMT_AVG_CWS_FC   --,C.CUST_TRANS_AMT_FC AS CUST_TRANS_AMT_AVG_CWS_FC
     ,D.CUST_TRANS_AMT_FC AS CUST_TRANS_AMT_AVG_SQT_FC
     ,S.CUST_TRANS_CNT_FC
     ,0 AS CUST_TRANS_CNT_CWS_FC   --,C.CUST_TRANS_CNT_FC AS CUST_TRANS_CNT_CWS_FC
     ,D.CUST_TRANS_CNT_FC AS CUST_TRANS_CNT_SQT_FC
     ,S.CUST_TRANS_CNT_MAX_FC
     ,S.CUST_TRANS_CNT_MAX_DATE_FC
     ,S.CUST_TRANS_CNT_MIN_FC
     ,S.CUST_TRANS_CNT_MIN_DATE_FC
     ,S.CUST_TRANS_CNT_AVG_FC
     ,0 AS CUST_TRANS_CNT_AVG_CWS_FC    --,C.CUST_TRANS_CNT_FC AS CUST_TRANS_CNT_AVG_CWS_FC
     ,D.CUST_TRANS_CNT_FC AS CUST_TRANS_CNT_AVG_SQT_FC
     ,S.CUST_TRANS_AMT
     ,0 AS CUST_TRANS_AMT_CWS    --,C.CUST_TRANS_AMT AS CUST_TRANS_AMT_CWS
     ,D.CUST_TRANS_AMT AS CUST_TRANS_AMT_SQT
     ,S.CUST_TRANS_AMT_MAX
     ,S.CUST_TRANS_AMT_MAX_DATE
     ,S.CUST_TRANS_AMT_MIN
     ,S.CUST_TRANS_AMT_MIN_DATE
     ,S.CUST_TRANS_AMT_AVG
     ,0 AS CUST_TRANS_AMT_AVG_CWS     --,C.CUST_TRANS_AMT AS CUST_TRANS_AMT_AVG_CWS
     ,D.CUST_TRANS_AMT AS CUST_TRANS_AMT_AVG_SQT
     ,S.CUST_TRANS_CNT
     ,0 AS CUST_TRANS_CNT_CWS    --,C.CUST_TRANS_CNT AS CUST_TRANS_CNT_CWS
     ,D.CUST_TRANS_CNT AS CUST_TRANS_CNT_SQT
     ,S.CUST_TRANS_CNT_MAX
     ,S.CUST_TRANS_CNT_MAX_DATE
     ,S.CUST_TRANS_CNT_MIN
     ,S.CUST_TRANS_CNT_MIN_DATE
     ,S.CUST_TRANS_CNT_AVG
     ,0 AS CUST_TRANS_CNT_AVG_CWS     --,C.CUST_TRANS_CNT AS CUST_TRANS_CNT_AVG_CWS
     ,D.CUST_TRANS_CNT AS CUST_TRANS_CNT_AVG_SQT
     ,0 AS NEW_FLAG

    FROM
      (
      SELECT
        TO_DATE('''||DM_TODAY||''',''YYYY-MM-DD'') AS TX_DATE
       ,'||DM_TODAY||' AS PERIOD_ID
       ,COALESCE(A.YEAR , E.YEAR) AS YEAR
       ,COALESCE(B.'||FREQ_VALUE||',FREQ_VALUE) AS FREQ_VALUE
       ,COALESCE(A.CUSTOMER_ID, E.CUSTOMER_ID) AS CUSTOMER_ID
       ,COALESCE(A.TransTyp_ID, E.TransTyp_ID) AS TransTyp_ID
       ,COALESCE(A.CHN_ID, E.CHANNEL) AS CHN_ID
       ,COALESCE(A.TransBr_ID, E.TransBr_ID) AS TransBr_ID
       ,COALESCE(A.PRODTYP_ID, E.PROD_TYPE) AS PRODTYP_ID
       ,COALESCE(A.TRANSDIR_FG, E.TRANSDIR_FG) AS TRANSDIR_FG
       --金额
       ,NVL(A.CUST_TRANS_AMT_LC,0) + NVL(E.CUST_TRANS_AMT_LC,0) AS CUST_TRANS_AMT_LC
       ,GREATEST(NVL(A.CUST_TRANS_AMT_LC,0),NVL(E.CUST_TRANS_AMT_MAX_LC,0)) AS CUST_TRANS_AMT_MAX_LC
       ,CASE WHEN NVL(A.CUST_TRANS_AMT_LC,0) - NVL(E.CUST_TRANS_AMT_MAX_LC,0) > 0
             THEN a.PERIOD_ID ELSE e.CUST_TRANS_AMT_MAX_DATE_LC
        END AS CUST_TRANS_AMT_MAX_DATE_LC
       ,CASE WHEN A.CUSTOMER_ID IS NULL  AND E.CUSTOMER_ID IS NOT NULL THEN E.CUST_TRANS_AMT_MIN_LC
             WHEN E.CUSTOMER_ID IS NULL  AND A.CUSTOMER_ID IS NOT NULL THEN A.CUST_TRANS_AMT_LC
             ELSE LEAST(NVL(A.CUST_TRANS_AMT_LC,0),NVL(E.CUST_TRANS_AMT_MIN_LC,0))
            END AS CUST_TRANS_AMT_MIN_LC
       ,CASE WHEN A.CUSTOMER_ID IS NULL  AND E.CUSTOMER_ID IS NOT NULL THEN E.CUST_TRANS_AMT_MIN_DATE_LC
             WHEN E.CUSTOMER_ID IS NULL  AND A.CUSTOMER_ID IS NOT NULL THEN A.PERIOD_ID
             ELSE (CASE WHEN NVL(A.CUST_TRANS_AMT_LC,0) - NVL(E.CUST_TRANS_AMT_MIN_LC,0) < 0 THEN A.PERIOD_ID ELSE E.CUST_TRANS_AMT_MIN_DATE_LC END)
            END AS CUST_TRANS_AMT_MIN_DATE_LC
       ,(NVL(A.CUST_TRANS_AMT_LC,0) + NVL(E.CUST_TRANS_AMT_LC,0)) / B.'||DAY_OF_FREQ||' AS CUST_TRANS_AMT_AVG_LC
       --笔数
       ,NVL(A.CUST_TRANS_CNT_LC,0) + NVL(E.CUST_TRANS_CNT_LC,0) AS CUST_TRANS_CNT_LC
         ,GREATEST(NVL(A.CUST_TRANS_CNT_LC,0),NVL(E.CUST_TRANS_CNT_MAX_LC,0)) AS CUST_TRANS_CNT_MAX_LC
         ,CASE WHEN NVL(A.CUST_TRANS_CNT_LC,0) - NVL(E.CUST_TRANS_CNT_MAX_LC,0) > 0
             THEN a.PERIOD_ID ELSE e.CUST_TRANS_CNT_MAX_DATE_LC
        END  AS CUST_TRANS_CNT_MAX_DATE_LC
         ,CASE WHEN A.CUSTOMER_ID IS NULL  AND E.CUSTOMER_ID IS NOT NULL THEN E.CUST_TRANS_CNT_MIN_LC
             WHEN E.CUSTOMER_ID IS NULL  AND A.CUSTOMER_ID IS NOT NULL THEN A.CUST_TRANS_CNT_LC
             ELSE LEAST(NVL(A.CUST_TRANS_CNT_LC,0),NVL(E.CUST_TRANS_CNT_MIN_LC,0))
            END AS CUST_TRANS_CNT_MIN_LC
         ,CASE WHEN A.CUSTOMER_ID IS NULL  AND E.CUSTOMER_ID IS NOT NULL THEN E.CUST_TRANS_CNT_MIN_DATE_LC
             WHEN E.CUSTOMER_ID IS NULL  AND A.CUSTOMER_ID IS NOT NULL THEN A.PERIOD_ID
             ELSE (CASE WHEN NVL(A.CUST_TRANS_CNT_LC,0) - NVL(E.CUST_TRANS_CNT_MIN_LC,0) < 0 THEN A.PERIOD_ID ELSE E.CUST_TRANS_CNT_MIN_DATE_LC END)
            END AS CUST_TRANS_CNT_MIN_DATE_LC
         ,(NVL(A.CUST_TRANS_CNT_LC,0) + NVL(E.CUST_TRANS_CNT_LC,0)) / B.'||DAY_OF_FREQ||' AS CUST_TRANS_CNT_AVG_LC
         --外币
         --金额
         ,NVL(A.CUST_TRANS_AMT_FC,0) + NVL(E.CUST_TRANS_AMT_FC,0) AS CUST_TRANS_AMT_FC
       ,GREATEST(NVL(A.CUST_TRANS_AMT_FC,0),NVL(E.CUST_TRANS_AMT_MAX_FC,0)) AS CUST_TRANS_AMT_MAX_FC
       ,CASE WHEN A.CUSTOMER_ID IS NULL  AND E.CUSTOMER_ID IS NOT NULL THEN E.CUST_TRANS_AMT_MAX_DATE_FC
             WHEN E.CUSTOMER_ID IS NULL  AND A.CUSTOMER_ID IS NOT NULL THEN A.PERIOD_ID
             WHEN NVL(A.CUST_TRANS_AMT_FC,0) - NVL(E.CUST_TRANS_AMT_MAX_FC,0) > 0
             THEN a.PERIOD_ID ELSE e.CUST_TRANS_AMT_MAX_DATE_FC
        END AS CUST_TRANS_AMT_MAX_DATE_FC
       ,CASE WHEN A.CUSTOMER_ID IS NULL  AND E.CUSTOMER_ID IS NOT NULL THEN E.CUST_TRANS_AMT_MIN_FC
             WHEN E.CUSTOMER_ID IS NULL  AND A.CUSTOMER_ID IS NOT NULL THEN A.CUST_TRANS_AMT_FC
             ELSE LEAST(NVL(A.CUST_TRANS_AMT_FC,0),NVL(E.CUST_TRANS_AMT_MIN_FC,0))
            END AS CUST_TRANS_AMT_MIN_FC
       ,CASE WHEN A.CUSTOMER_ID IS NULL  AND E.CUSTOMER_ID IS NOT NULL THEN E.CUST_TRANS_AMT_MIN_DATE_FC
             WHEN E.CUSTOMER_ID IS NULL  AND A.CUSTOMER_ID IS NOT NULL THEN A.PERIOD_ID
             ELSE (CASE WHEN NVL(A.CUST_TRANS_AMT_FC,0) - NVL(E.CUST_TRANS_AMT_MIN_FC,0) < 0 THEN A.PERIOD_ID ELSE E.CUST_TRANS_AMT_MIN_DATE_FC END)
            END AS CUST_TRANS_AMT_MIN_DATE_FC
       ,(NVL(A.CUST_TRANS_AMT_FC,0) + NVL(E.CUST_TRANS_AMT_FC,0)) / B.'||DAY_OF_FREQ||' AS CUST_TRANS_AMT_AVG_FC
       --笔数
       ,NVL(A.CUST_TRANS_CNT_FC,0) + NVL(E.CUST_TRANS_CNT_FC,0) AS CUST_TRANS_CNT_FC
         ,GREATEST(NVL(A.CUST_TRANS_CNT_FC,0),NVL(E.CUST_TRANS_CNT_MAX_FC,0)) AS CUST_TRANS_CNT_MAX_FC
         ,CASE WHEN A.CUSTOMER_ID IS NULL  AND E.CUSTOMER_ID IS NOT NULL THEN E.CUST_TRANS_CNT_MAX_DATE_FC
             WHEN E.CUSTOMER_ID IS NULL  AND A.CUSTOMER_ID IS NOT NULL THEN A.PERIOD_ID
             WHEN NVL(A.CUST_TRANS_CNT_FC,0) - NVL(E.CUST_TRANS_CNT_MAX_FC,0) > 0
             THEN a.PERIOD_ID ELSE e.CUST_TRANS_CNT_MAX_DATE_FC
        END  AS CUST_TRANS_CNT_MAX_DATE_FC
         ,CASE WHEN A.CUSTOMER_ID IS NULL  AND E.CUSTOMER_ID IS NOT NULL THEN E.CUST_TRANS_CNT_MIN_FC
             WHEN E.CUSTOMER_ID IS NULL  AND A.CUSTOMER_ID IS NOT NULL THEN A.CUST_TRANS_CNT_FC
             ELSE LEAST(NVL(A.CUST_TRANS_CNT_FC,0),NVL(E.CUST_TRANS_CNT_MIN_FC,0))
            END AS CUST_TRANS_CNT_MIN_FC
         ,CASE WHEN A.CUSTOMER_ID IS NULL  AND E.CUSTOMER_ID IS NOT NULL THEN E.CUST_TRANS_CNT_MIN_DATE_FC
             WHEN E.CUSTOMER_ID IS NULL  AND A.CUSTOMER_ID IS NOT NULL THEN A.PERIOD_ID
             ELSE (CASE WHEN NVL(A.CUST_TRANS_CNT_FC,0) - NVL(E.CUST_TRANS_CNT_MIN_FC,0) < 0 THEN A.PERIOD_ID ELSE E.CUST_TRANS_CNT_MIN_DATE_FC END)
            END AS CUST_TRANS_CNT_MIN_DATE_FC
         ,(NVL(A.CUST_TRANS_CNT_FC,0) + NVL(E.CUST_TRANS_CNT_FC,0)) / B.'||DAY_OF_FREQ||' AS CUST_TRANS_CNT_AVG_FC
         --合计
         --金额
         ,NVL(A.CUST_TRANS_AMT,0) + NVL(E.CUST_TRANS_AMT,0) AS CUST_TRANS_AMT
       ,GREATEST(NVL(A.CUST_TRANS_AMT,0),NVL(E.CUST_TRANS_AMT_MAX,0)) AS CUST_TRANS_AMT_MAX
       ,CASE WHEN NVL(A.CUST_TRANS_AMT,0) - NVL(E.CUST_TRANS_AMT_MAX,0) > 0
             THEN a.PERIOD_ID ELSE e.CUST_TRANS_AMT_MAX_DATE
        END AS CUST_TRANS_AMT_MAX_DATE
       ,CASE WHEN A.CUSTOMER_ID IS NULL  AND E.CUSTOMER_ID IS NOT NULL THEN E.CUST_TRANS_AMT_MIN
             WHEN E.CUSTOMER_ID IS NULL  AND A.CUSTOMER_ID IS NOT NULL THEN A.CUST_TRANS_AMT
             ELSE LEAST(NVL(A.CUST_TRANS_AMT,0),NVL(E.CUST_TRANS_AMT_MIN,0))
            END AS CUST_TRANS_AMT_MIN
       ,CASE WHEN A.CUSTOMER_ID IS NULL  AND E.CUSTOMER_ID IS NOT NULL THEN E.CUST_TRANS_AMT_MIN_DATE
             WHEN E.CUSTOMER_ID IS NULL  AND A.CUSTOMER_ID IS NOT NULL THEN A.PERIOD_ID
             ELSE (CASE WHEN NVL(A.CUST_TRANS_AMT,0) - NVL(E.CUST_TRANS_AMT_MIN,0) < 0 THEN A.PERIOD_ID ELSE E.CUST_TRANS_AMT_MIN_DATE END)
            END AS CUST_TRANS_AMT_MIN_DATE
       ,(NVL(A.CUST_TRANS_AMT,0) + NVL(E.CUST_TRANS_AMT,0)) / B.'||DAY_OF_FREQ||' AS CUST_TRANS_AMT_AVG
       --笔数
       ,NVL(A.CUST_TRANS_CNT,0) + NVL(E.CUST_TRANS_CNT,0) AS CUST_TRANS_CNT
         ,GREATEST(NVL(A.CUST_TRANS_CNT,0),NVL(E.CUST_TRANS_CNT_MAX,0)) AS CUST_TRANS_CNT_MAX
         ,CASE WHEN NVL(A.CUST_TRANS_CNT,0) - NVL(E.CUST_TRANS_CNT_MAX,0) > 0
             THEN a.PERIOD_ID ELSE e.CUST_TRANS_CNT_MAX_DATE
        END  AS CUST_TRANS_CNT_MAX_DATE
         ,CASE WHEN A.CUSTOMER_ID IS NULL  AND E.CUSTOMER_ID IS NOT NULL THEN E.CUST_TRANS_CNT_MIN
             WHEN E.CUSTOMER_ID IS NULL  AND A.CUSTOMER_ID IS NOT NULL THEN A.CUST_TRANS_CNT
             ELSE LEAST(NVL(A.CUST_TRANS_CNT,0),NVL(E.CUST_TRANS_CNT_MIN,0))
            END AS CUST_TRANS_CNT_MIN
         ,CASE WHEN A.CUSTOMER_ID IS NULL  AND E.CUSTOMER_ID IS NOT NULL THEN E.CUST_TRANS_CNT_MIN_DATE
             WHEN E.CUSTOMER_ID IS NULL  AND A.CUSTOMER_ID IS NOT NULL THEN A.PERIOD_ID
             ELSE (CASE WHEN NVL(A.CUST_TRANS_CNT,0) - NVL(E.CUST_TRANS_CNT_MIN,0) < 0 THEN A.PERIOD_ID ELSE E.CUST_TRANS_CNT_MIN_DATE END)
            END AS CUST_TRANS_CNT_MIN_DATE
         ,(NVL(A.CUST_TRANS_CNT,0) + NVL(E.CUST_TRANS_CNT,0)) / B.'||DAY_OF_FREQ||' AS CUST_TRANS_CNT_AVG

    FROM MMAPDM.TMP_CUST_TRANS_STAT A
      --最值e，取本统计期内数据
      FULL JOIN 
      (
      select bb.period_id as period,aa.* from 
      MMAPDM.'||TABLE_NAME||' aa
      inner join MMAPDM.MID_CALENDAR bb
      on aa.year=bb.year
      and aa.freq_value=BB.'||FREQ_VALUE||'
      and bb.period_id='||DM_TODAY||'
      )E
      ON A.CUSTOMER_ID = E.CUSTOMER_ID
      AND E.PROD_TYPE = A.PRODTYP_ID
      AND E.CHANNEL = A.CHN_ID
      AND E.TransTyp_ID = A.TransTyp_ID
      AND E.TransBr_ID = A.TransBr_ID
    left JOIN(SELECT * FROM  MMAPDM.MID_CALENDAR WHERE period_id='||DM_TODAY||') B
      ON 1 = 1

       ) S
        /*
        --同期c，暂不计算同期数据
        LEFT JOIN  MMAPDM.'||TABLE_NAME||' C
        ON B.YEAR - 1 = C.YEAR
        AND B.'||FREQ_VALUE||' = C.FREQ_VALUE
        AND S.CUSTOMER_ID = C.CUSTOMER_ID
        AND C.PROD_TYPE = S.PROD_TYPE
        */
      --上期d，取上一统计期数据

      LEFT JOIN MMAPDM.'||TABLE_NAME||' D
      ON D.FREQ_DIFF = 1
      AND S.CUSTOMER_ID = D.CUSTOMER_ID
      AND D.PROD_TYPE = S.PRODTYP_ID
      AND D.CHANNEL = S.CHN_ID
      AND D.TransTyp_ID = S.TransTyp_ID
      AND D.TransBr_ID = S.TransBr_ID

      ';

  EXECUTE IMMEDIATE DM_SQL;
    COMMIT;

  --删除本统计周期旧数据，及超期历史数据
  DM_SQL:= 'DELETE FROM MMAPDM.'||TABLE_NAME||' WHERE FREQ_DIFF =0 OR FREQ_DIFF>='||FREQ_HIS;
  EXECUTE IMMEDIATE DM_SQL;
  IO_ROW := IO_ROW+SQL%ROWCOUNT ;
  COMMIT;
  --插入当天数据
  BEGIN

    DM_SQL:= '
      SELECT
         ETL_DATE
        ,TX_DATE
        ,PERIOD_ID
        ,FREQ
        ,YEAR
        ,FREQ_VALUE
        ,0 AS FREQ_DIFF
        ,CUSTOMER_ID
        ,PRODTYP_ID
        ,CHN_ID
        ,TransBr_ID
        ,TRANSDIR_FG
        ,TransTyp_ID
        ,CUST_TRANS_AMT_LC
        ,CUST_TRANS_AMT_CWS_LC
        ,CUST_TRANS_AMT_SQT_LC
        ,CUST_TRANS_AMT_MAX_LC
        ,CUST_TRANS_AMT_MAX_DATE_LC
        ,CUST_TRANS_AMT_MIN_LC
        ,CUST_TRANS_AMT_MIN_DATE_LC
        ,CUST_TRANS_AMT_AVG_LC
        ,CUST_TRANS_AMT_AVG_CWS_LC
        ,CUST_TRANS_AMT_AVG_SQT_LC
        ,CUST_TRANS_CNT_LC
        ,CUST_TRANS_CNT_CWS_LC
        ,CUST_TRANS_CNT_SQT_LC
        ,CUST_TRANS_CNT_MAX_LC
        ,CUST_TRANS_CNT_MAX_DATE_LC
        ,CUST_TRANS_CNT_MIN_LC
        ,CUST_TRANS_CNT_MIN_DATE_LC
        ,CUST_TRANS_CNT_AVG_LC
        ,CUST_TRANS_CNT_AVG_CWS_LC
        ,CUST_TRANS_CNT_AVG_SQT_LC
        ,CUST_TRANS_AMT_FC
        ,CUST_TRANS_AMT_CWS_FC
        ,CUST_TRANS_AMT_SQT_FC
        ,CUST_TRANS_AMT_MAX_FC
        ,CUST_TRANS_AMT_MAX_DATE_FC
        ,CUST_TRANS_AMT_MIN_FC
        ,CUST_TRANS_AMT_MIN_DATE_FC
        ,CUST_TRANS_AMT_AVG_FC
        ,CUST_TRANS_AMT_AVG_CWS_FC
        ,CUST_TRANS_AMT_AVG_SQT_FC
        ,CUST_TRANS_CNT_FC
        ,CUST_TRANS_CNT_CWS_FC
        ,CUST_TRANS_CNT_SQT_FC
        ,CUST_TRANS_CNT_MAX_FC
        ,CUST_TRANS_CNT_MAX_DATE_FC
        ,CUST_TRANS_CNT_MIN_FC
        ,CUST_TRANS_CNT_MIN_DATE_FC
        ,CUST_TRANS_CNT_AVG_FC
        ,CUST_TRANS_CNT_AVG_CWS_FC
        ,CUST_TRANS_CNT_AVG_SQT_FC
        ,CUST_TRANS_AMT
        ,CUST_TRANS_AMT_CWS
        ,CUST_TRANS_AMT_SQT
        ,CUST_TRANS_AMT_MAX
        ,CUST_TRANS_AMT_MAX_DATE
        ,CUST_TRANS_AMT_MIN
        ,CUST_TRANS_AMT_MIN_DATE
        ,CUST_TRANS_AMT_AVG
        ,CUST_TRANS_AMT_AVG_CWS
        ,CUST_TRANS_AMT_AVG_SQT
        ,CUST_TRANS_CNT
        ,CUST_TRANS_CNT_CWS
        ,CUST_TRANS_CNT_SQT
        ,CUST_TRANS_CNT_MAX
        ,CUST_TRANS_CNT_MAX_DATE
        ,CUST_TRANS_CNT_MIN
        ,CUST_TRANS_CNT_MIN_DATE
        ,CUST_TRANS_CNT_AVG
        ,CUST_TRANS_CNT_AVG_CWS
        ,CUST_TRANS_CNT_AVG_SQT
        ,0 AS NEW_FLAG
      FROM MMAPDM.TMP_CUST_TRANS_CAL
    ';
    --计数器初始化 
    V_COUNT  := 0;  
   
    --批量插入当日数据
    OPEN C1 FOR DM_SQL;
      LOOP
        --确定取数SQL
        IF DM_TABLE_NAME='DM_CUST_TRANS_W_STAT'
        THEN
          FETCH C1 INTO V_DM_CUST_TRANS_W_STAT;
          EXIT WHEN C1%NOTFOUND;
          INSERT INTO DM_CUST_TRANS_W_STAT VALUES V_DM_CUST_TRANS_W_STAT;
          IO_ROW := IO_ROW+SQL%ROWCOUNT ;

        ELSIF DM_TABLE_NAME='DM_CUST_TRANS_M_STAT'
        THEN
          FETCH C1 INTO V_DM_CUST_TRANS_M_STAT;
          EXIT WHEN C1%NOTFOUND;
          INSERT INTO DM_CUST_TRANS_M_STAT VALUES V_DM_CUST_TRANS_M_STAT;
          IO_ROW := IO_ROW+SQL%ROWCOUNT ;

        ELSIF DM_TABLE_NAME='DM_CUST_TRANS_Q_STAT'
        THEN
          FETCH C1 INTO V_DM_CUST_TRANS_Q_STAT;
          EXIT WHEN C1%NOTFOUND;
          INSERT INTO DM_CUST_TRANS_Q_STAT VALUES V_DM_CUST_TRANS_Q_STAT;
          IO_ROW := IO_ROW+SQL%ROWCOUNT ;

        ELSIF DM_TABLE_NAME='DM_CUST_TRANS_Y_STAT'
        THEN
          FETCH C1 INTO V_DM_CUST_TRANS_Y_STAT;
          EXIT WHEN C1%NOTFOUND;
          INSERT INTO DM_CUST_TRANS_Y_STAT VALUES V_DM_CUST_TRANS_Y_STAT;
          IO_ROW := IO_ROW+SQL%ROWCOUNT ;

        ELSE EXIT;
        END IF;
        V_COUNT := V_COUNT + 1;
        IF (V_COMMITNUM>0 AND (MOD(V_COUNT, V_COMMITNUM)) = 0) THEN        
          COMMIT; 
        END IF;      
        
      END LOOP;
      COMMIT;
      CLOSE C1;
  END; 

    /*
        写入日志
    */

    SELECT SYSDATE INTO V_END_TIMESTAMP   FROM dual;    -- 加载程序运行结束时间
    IO_STATUS := 0 ;
    IO_SQLERR := 'SUSSCESS';
    P_MMAPDM_WRITE_LOGS(PROCEDURE_NAME,IO_STATUS,IO_ROW,V_START_TIMESTAMP,V_END_TIMESTAMP,IO_SQLERR);
    COMMIT;

    EXCEPTION
      WHEN OTHERS THEN
    ROLLBACK ;
    IO_STATUS := 9 ;
    P_DM_CUST_TRANS_STAT_ROLLBACK(TABLE_NAME,DM_TODAY,DM_YESTERDAY,FREQ);
    IO_SQLERR := SQLCODE ||  SQLERRM  ;
    SELECT SYSDATE INTO  V_END_TIMESTAMP  FROM dual;
    P_MMAPDM_WRITE_LOGS(PROCEDURE_NAME,IO_STATUS,IO_ROW,V_START_TIMESTAMP,V_END_TIMESTAMP,IO_SQLERR);
END P_DM_CUST_TRANS_STAT_FREQ;

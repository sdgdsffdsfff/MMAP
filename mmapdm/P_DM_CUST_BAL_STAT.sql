CREATE OR REPLACE PROCEDURE "MMAPDM"."P_DM_CUST_BAL_STAT"
(IO_STATUS OUT INTEGER,IO_SQLERR OUT VARCHAR2)

AS

  PROCEDURE_NAME VARCHAR2(125) :='P_DM_CUST_BAL_STAT'; --大存储过程名称

  DM_SQL VARCHAR2(20000); -- the variable to loading the SQL statment
  IO_ROW_ALL INTEGER;  --插入条数
  IO_ROW INTEGER;  --插入条数
  ST_ROW INTEGER;  --源数据条数
  IO_STATUS_PREQ INTEGER;  --频度存储过程执行状态

  V_ETL_DATE NUMBER;  -- 跑批日期
  V_START_TIMESTAMP TIMESTAMP;    --the start time of procedures
  V_END_TIMESTAMP   TIMESTAMP;    --the end time of procedures

  DM_TODAY NUMBER;        -- 数据日期"当日"
  DM_YESTERDAY NUMBER;  -- 数据日期"上一日"

BEGIN

  SELECT SYSDATE INTO V_START_TIMESTAMP FROM dual;    -- 加载程序运行开始时间

  SELECT TO_NUMBER(TO_CHAR((SYSDATE),'YYYYMMDD')) INTO V_ETL_DATE FROM dual;  -- 取系统日期作为跑批日期

  SELECT TX_DATE INTO DM_TODAY FROM MMAPST.ST_SYSTEM_DATE;  --取数据日期
  SELECT PRE_DATE INTO DM_YESTERDAY FROM MMAPST.ST_SYSTEM_DATE;  -- 取数据日期"上一日"

  --查询ST层表中是否有'当日'数据
  SELECT COUNT(1) INTO ST_ROW FROM MMAPST.ST_CUST_BAL WHERE PERIOD_ID=DM_TODAY;

  --如果ST层有"当日"数据，则进行数据抽取，否则保持DM层现有数据不变。
  IF ST_ROW>0
  THEN
    -----------------------源表ST_CUST_BAL转置并翻倍-----------------------

    SELECT COUNT(1) INTO ST_ROW FROM USER_TABLES WHERE TABLE_NAME = 'TMP_CUST_BAL_T';
    IF ST_ROW >0
    THEN
      DM_SQL := 'DROP TABLE MMAPDM.TMP_CUST_BAL_T PURGE';
      EXECUTE  IMMEDIATE DM_SQL;
    END IF;

    DM_SQL:= 'CREATE TABLE MMAPDM.TMP_CUST_BAL_T AS
    SELECT
       B.ETL_DATE
      ,B.TX_DATE
      ,B.PERIOD_ID
      ,B.CUSTOMER_ID
      ,CASE A.DAYOFYEAR
            WHEN 1 THEN ''CD''
            WHEN 2 THEN ''TD''
            WHEN 3 THEN ''LOAN''
            WHEN 4 THEN ''NDEBT''
            WHEN 5 THEN ''FOUND''
            WHEN 6 THEN ''FIN''
            WHEN 7 THEN ''INSURE''
            WHEN 8 THEN ''NOBLE''
            WHEN 9 THEN ''CREDIT''
            WHEN 10 THEN ''ALL''
       END AS PROD_TYPE
      ,CASE A.DAYOFYEAR
            WHEN 1 THEN B.CUST_CD_BAL_LC
            WHEN 2 THEN B.CUST_TD_BAL_LC
            WHEN 3 THEN B.CUST_LOAN_BAL_LC
            WHEN 4 THEN B.CUST_NDEBT_BAL_LC
            WHEN 5 THEN B.CUST_FOUND_BAL_LC
            WHEN 6 THEN B.CUST_FIN_BAL_LC
            WHEN 7 THEN B.CUST_INSURE_BAL_LC
            WHEN 8 THEN B.CUST_NOBLE_BAL_LC
            WHEN 9 THEN B.CUST_CREDIT_BAL_LC
            WHEN 10 THEN B.CUST_ALL_BAL_LC
       END AS CUST_BAL_LC
      ,CASE A.DAYOFYEAR
            WHEN 1 THEN B.CUST_CD_BAL_FC
            WHEN 2 THEN B.CUST_TD_BAL_FC
            WHEN 3 THEN B.CUST_LOAN_BAL_FC
            WHEN 9 THEN B.CUST_CREDIT_BAL_FC
            WHEN 10 THEN B.CUST_ALL_BAL_FC
       END AS CUST_BAL_FC
      ,CASE A.DAYOFYEAR
            WHEN 1 THEN B.CUST_CD_BAL_LC+B.CUST_CD_BAL_FC
            WHEN 2 THEN B.CUST_TD_BAL_LC+B.CUST_TD_BAL_FC
            WHEN 3 THEN B.CUST_LOAN_BAL_LC+B.CUST_LOAN_BAL_FC
            WHEN 4 THEN B.CUST_NDEBT_BAL_LC
            WHEN 5 THEN B.CUST_FOUND_BAL_LC
            WHEN 6 THEN B.CUST_FIN_BAL_LC
            WHEN 7 THEN B.CUST_INSURE_BAL_LC
            WHEN 8 THEN B.CUST_NOBLE_BAL_LC
            WHEN 9 THEN B.CUST_CREDIT_BAL_LC+B.CUST_CREDIT_BAL_FC
            WHEN 10 THEN B.CUST_ALL_BAL
       END AS CUST_BAL
    FROM
    (
    SELECT A.DAYOFYEAR
    FROM MMAPDM.MID_CALENDAR A
    WHERE A.DAYOFYEAR<=10
    GROUP BY A.DAYOFYEAR
    )A
    LEFT JOIN MMAPST.ST_CUST_BAL B
    ON 1=1
    ORDER BY A.DAYOFYEAR
    ';
    EXECUTE IMMEDIATE DM_SQL;
    COMMIT;

    --调度周频度数据
    P_DM_CUST_BAL_STAT_FREQ('DM_CUST_BAL_W_STAT','W','WEEKOFYEAR','DAYOFWEEK',7,DM_TODAY,DM_YESTERDAY,IO_ROW,IO_STATUS_PREQ);
    IO_ROW_ALL := IO_ROW;
    IO_STATUS:=IO_STATUS_PREQ;
    --调度月频度数据
    P_DM_CUST_BAL_STAT_FREQ('DM_CUST_BAL_M_STAT','M','MONTH','DAYOFMONTH',6,DM_TODAY,DM_YESTERDAY,IO_ROW,IO_STATUS_PREQ);
    IO_ROW_ALL := IO_ROW_ALL+IO_ROW;
    IO_STATUS:=IO_STATUS+IO_STATUS_PREQ;
    --调度季频度数据
    P_DM_CUST_BAL_STAT_FREQ('DM_CUST_BAL_Q_STAT','Q','QUARTER','DAYOFQUARTER',3,DM_TODAY,DM_YESTERDAY,IO_ROW,IO_STATUS_PREQ);
    IO_ROW_ALL := IO_ROW_ALL+IO_ROW;
    IO_STATUS:=IO_STATUS+IO_STATUS_PREQ;
    --调度年频度数据
    P_DM_CUST_BAL_STAT_FREQ('DM_CUST_BAL_Y_STAT','Y','YEAR','DAYOFYEAR',2,DM_TODAY,DM_YESTERDAY,IO_ROW,IO_STATUS_PREQ);
    IO_ROW_ALL := IO_ROW_ALL+IO_ROW;
    IO_STATUS:=IO_STATUS+IO_STATUS_PREQ;

END IF;
/*
    写入日志
*/
    IF IO_STATUS=0
      THEN IO_SQLERR := 'SUSSCESS';
    ELSE IO_STATUS := 9 ;
         IO_SQLERR := 'P_DM_CUST_BAL_STAT_FREQ ERROR';
    END IF;
    SELECT SYSDATE INTO V_END_TIMESTAMP   FROM dual;    -- 加载程序运行结束时间
    P_MMAPDM_WRITE_LOGS(PROCEDURE_NAME,IO_STATUS,IO_ROW_ALL,V_START_TIMESTAMP,V_END_TIMESTAMP,IO_SQLERR);
    COMMIT;

  EXCEPTION
    WHEN OTHERS THEN
  ROLLBACK ;
  IO_STATUS := 9 ;
  IO_SQLERR := SQLCODE ||  SQLERRM  ;
  SELECT SYSDATE INTO  V_END_TIMESTAMP  FROM dual;
  P_MMAPDM_WRITE_LOGS(PROCEDURE_NAME,IO_STATUS,IO_ROW_ALL,V_START_TIMESTAMP,V_END_TIMESTAMP,IO_SQLERR);
END P_DM_CUST_BAL_STAT;
